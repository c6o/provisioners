apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  namespace: {{namespace}}
  labels:
    app: docker-registry
    name: docker-registry
    app.kubernetes.io/managed-by: codezero
    system.codezero.io/app: docker-registry
spec:
  selector:
    matchLabels:
      app: docker-registry
  replicas: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: docker-registry
        name: docker-registry
      annotations:
        checksum/config: 97eed2888316a7e96334c25e0542f81da9c08c748cdb8257c9fb208be7607732
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:
        - name: docker-registry
          image: "registry:2.7.1"
          imagePullPolicy: IfNotPresent
          command:
          - /bin/registry
          - serve
          - /etc/docker/registry/config.yml
          ports:
            - containerPort: 5000
          livenessProbe:
            httpGet:
              path: /
              port: 5000
          readinessProbe:
            httpGet:
              path: /
              port: 5000
          resources:
            {}
          env:
            - name: REGISTRY_HTTP_SECRET
              valueFrom:
                secretKeyRef:
                  name: docker-registry-secret
                  key: haSharedSecret
            - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
              value: "/var/lib/registry"
          volumeMounts:
            - name: data
              mountPath: /var/lib/registry/
            - name: "docker-registry-config"
              mountPath: "/etc/docker/registry"
      volumes:
        - name: data
          emptyDir: {}
        - name: docker-registry-config
          configMap:
            name: docker-registry-config
---
