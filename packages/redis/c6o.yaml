name: Redis
appId: redis
package: '@provisioner/appengine'
icon: icon.svg
summary:
  Redis is often referred to as a data structures server. What this means is that Redis provides access to mutable data structures via a set of commands, which are sent using a server-client model with TCP sockets and a simple protocol. So different processes can query and modify the same data structures in a shared way.


description:
  Redis is often referred to as a data structures server. What this means is that Redis provides access to mutable data structures via a set of commands, which are sent using a server-client model with TCP sockets and a simple protocol. So different processes can query and modify the same data structures in a shared way.


  Data structures implemented into Redis have a few special properties...


  Redis cares to store them on disk, even if they are always served and modified into the server memory. This means that Redis is fast, but that it is also non-volatile.


  The implementation of data structures emphasizes memory efficiency, so data structures inside Redis will likely use less memory compared to the same data structure modelled using a high-level programming language.


  Redis offers a number of features that are natural to find in a database, like replication, tunable levels of durability, clustering, and high availability.


  Another good example is to think of Redis as a more complex version of memcached, where the operations are not just SETs and GETs, but operations that work with complex data types like Lists, Sets, ordered data structures, and so forth.

category: databases
keywords:
  - data structures server
  - memory
  - non-volatile
  - replication
  - durability
  - clustering
  - high availability



repo: https://github.com/redis/redis
support: https://github.com/redis/redis/issues
license: https://github.com/redis/redis/blob/unstable/COPYING

provisioner:
  repo: https://github.com/c6o/provisioners
  support: https://github.com/c6o/provisioners/issues


editions:
  - name: preview
    status: public
    spec:
      routes:
        - type: tcp
          targetService: redis
          tcp:
            port: 6379
            name: redis
      provisioner:
        package: '@provisioner/appengine'
        tag-prefix: appengine
        name: redis
        image: 'redis'
        config:
          - name: appendonly
            value: yes
        port:
          - port: 6379
            name: tcp
            protocol: TCP
        volume:
          - size: 5Gi
            mountPath: /data
            name: redis-data
        automated: true
      marina:
        launch:
          type: inline
          popUp: true

  - name: previewinternal
    status: public
    spec:
      provisioner:
        package: '@provisioner/appengine'
        tag-prefix: appengine
        name: redis
        image: 'redis'
        config:
          - name: appendonly
            value: yes
        port:
          - port: 6379
            name: tcp
            protocol: TCP
        volume:
          - size: 5Gi
            mountPath: /data
            name: redis-data
        automated: true
      marina:
        launch:
          type: inline
          popUp: true
